function DelLP = LPVarJ26(Em, mu, Re, Jcoeff)
% Computes long-period variations due to zonal harmonic.

L = Em(4);
G = Em(5);
H = Em(6);

g = Em(2);

% classical elements
% a = L^2/mu;
eta = G/L;
% ADDED this 09/02/2022
if eta > 1
    eta = 1;
end
%%%
e = sqrt(1 - eta^2);
i = acos(H/G);

ci = cos(i);
% si = sin(i);

J(2:6) = Jcoeff(2:6);
R__e = Re;

% J3
DelLPJ3(1,1) = (-0.131072e6 * sqrt((-ci ^ 2 + 1)) * R__e * L ^ 14 * mu * ((5 * ci ^ 2 - 1) ^ 2) * cos(g) * (eta ^ 13) * (5 * e ^ 4 + 6 * e ^ 2 * eta ^ 2 - 5 * e ^ 2 - eta ^ 2) * J(3) * J(2) + (-0.96768000e8 * sqrt((-ci ^ 2 + 1)) * R__e ^ 3 * L ^ 10 * mu ^ 3 * (0.4e1 / 0.5e1 * (e + 0.1e1 / 0.2e1) * (e - 0.1e1 / 0.2e1) * ((ci ^ 4) - 0.2e1 / 0.3e1 * (ci ^ 2) + 0.1e1 / 0.21e2) * (eta ^ 4) + (((e ^ 4) - 0.31e2 / 0.9e1 * (e ^ 2) + 0.11e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * (e ^ 4) + 0.50e2 / 0.21e2 * (e ^ 2) - 0.2e1 / 0.7e1) * (ci ^ 2) + (e ^ 4) / 0.21e2 - 0.19e2 / 0.105e3 * (e ^ 2) + 0.1e1 / 0.45e2) * (eta ^ 2) - 0.55e2 / 0.27e2 * (e ^ 2) * (e + 1) * (e - 1) * ((ci ^ 4) - 0.54e2 / 0.77e2 * (ci ^ 2) + 0.3e1 / 0.55e2)) * ((ci ^ 2) - 0.1e1 / 0.5e1) * cos(g) * (eta ^ 9) * J(4) - 0.480480000e9 * sqrt((-ci ^ 2 + 1)) * R__e ^ 5 * L ^ 6 * mu ^ 5 * ((ci ^ 2) - 0.1e1 / 0.5e1) * cos(g) * (0.2e1 / 0.5e1 * ((e ^ 2) - 0.1e1 / 0.2e1) * ((ci ^ 6) - 0.15e2 / 0.13e2 * (ci ^ 4) + 0.45e2 / 0.143e3 * (ci ^ 2) - 0.5e1 / 0.429e3) * (eta ^ 6) + ((0.14e2 / 0.13e2 - 0.69e2 / 0.13e2 * (e ^ 2) + (e ^ 4)) * (ci ^ 6) + (-0.14e2 / 0.11e2 + 0.893e3 / 0.143e3 * (e ^ 2) - 0.15e2 / 0.13e2 * (e ^ 4)) * (ci ^ 4) + (0.14e2 / 0.39e2 - 0.751e3 / 0.429e3 * (e ^ 2) + 0.45e2 / 0.143e3 * (e ^ 4)) * (ci ^ 2) - 0.5e1 / 0.429e3 * (e ^ 4) - 0.2e1 / 0.143e3 + 0.29e2 / 0.429e3 * (e ^ 2)) * (eta ^ 4) + ((-0.357e3 / 0.325e3 - 0.70e2 / 0.13e2 * (e ^ 4) + 0.3892e4 / 0.325e3 * (e ^ 2)) * (ci ^ 6) + (0.189e3 / 0.143e3 - 0.2044e4 / 0.143e3 * (e ^ 2) + 0.70e2 / 0.11e2 * (e ^ 4)) * (ci ^ 4) + (-0.21e2 / 0.55e2 + 0.8764e4 / 0.2145e4 * (e ^ 2) - 0.70e2 / 0.39e2 * (e ^ 4)) * (ci ^ 2) - 0.116e3 / 0.715e3 * (e ^ 2) + 0.10e2 / 0.143e3 * (e ^ 4) + 0.1e1 / 0.65e2) * (eta ^ 2) + 0.357e3 / 0.65e2 * (e ^ 2) * (e + 1) * ((ci ^ 6) - 0.225e3 / 0.187e3 * (ci ^ 4) + 0.65e2 / 0.187e3 * (ci ^ 2) - 0.5e1 / 0.357e3) * (e - 1)) * (eta ^ 5) * J(6)) * J(3)) / (0.262144e6 * (eta ^ 16) * ((5 * ci ^ 2 - 1) ^ 2) * L ^ 16 * e * J(2) ^ 2 + (0.81920e5 * mu ^ 2 * (5 * ci ^ 2 - 1) * L ^ 12 * (eta ^ 12) * (189 * eta ^ 2 * ci ^ 4 - 385 * ci ^ 4 - 126 * eta ^ 2 * ci ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * e * R__e ^ 2 * J(4) + 0.35840e5 * mu ^ 4 * (2145 * eta ^ 4 * ci ^ 6 - 11550 * eta ^ 2 * ci ^ 6 - 2475 * eta ^ 4 * ci ^ 4 + 11781 * ci ^ 6 + 13650 * eta ^ 2 * ci ^ 4 + 675 * eta ^ 4 * ci ^ 2 - 14175 * ci ^ 4 - 3850 * eta ^ 2 * ci ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * (5 * ci ^ 2 - 1) * L ^ 8 * (eta ^ 8) * e * R__e ^ 4 * J(6)) * J(2) + 0.6400e4 * mu ^ 4 * L ^ 8 * (eta ^ 8) * ((189 * eta ^ 2 * ci ^ 4 - 385 * ci ^ 4 - 126 * eta ^ 2 * ci ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) ^ 2) * e * R__e ^ 4 * J(4) ^ 2 + 0.5600e4 * mu ^ 6 * (2145 * eta ^ 4 * ci ^ 6 - 11550 * eta ^ 2 * ci ^ 6 - 2475 * eta ^ 4 * ci ^ 4 + 11781 * ci ^ 6 + 13650 * eta ^ 2 * ci ^ 4 + 675 * eta ^ 4 * ci ^ 2 - 14175 * ci ^ 4 - 3850 * eta ^ 2 * ci ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * L ^ 4 * (eta ^ 4) * (189 * eta ^ 2 * ci ^ 4 - 385 * ci ^ 4 - 126 * eta ^ 2 * ci ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * e * R__e ^ 6 * J(6) * J(4) + 0.1225e4 * ((2145 * eta ^ 4 * ci ^ 6 - 11550 * eta ^ 2 * ci ^ 6 - 2475 * eta ^ 4 * ci ^ 4 + 11781 * ci ^ 6 + 13650 * eta ^ 2 * ci ^ 4 + 675 * eta ^ 4 * ci ^ 2 - 14175 * ci ^ 4 - 3850 * eta ^ 2 * ci ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) ^ 2) * R__e ^ 8 * mu ^ 8 * e * J(6) ^ 2);

DelLPJ3(2,1) = (-0.16384000e8 * R__e * L ^ 14 * mu * (ci ^ 2 - 0.1e1 / 0.5e1) ^ 2 * cos(g) * eta ^ 12 * ((e ^ 4 + (0.4e1 / 0.5e1 * eta ^ 2 - 0.1e1) * e ^ 2 - eta ^ 2 / 0.5e1) * ci ^ 2 - e ^ 4 + (-eta ^ 2 + 0.1e1) * e ^ 2 + eta ^ 2 / 0.5e1) * J(3) * J(2) + (-0.20480e5 * L ^ 10 * cos(g) * R__e ^ 3 * eta ^ 8 * mu ^ 3 * (0.4725e4 * ci ^ 8 * e ^ 4 * eta ^ 2 + 0.7560e4 * ci ^ 8 * e ^ 2 * eta ^ 4 - 0.9625e4 * ci ^ 8 * e ^ 4 - 0.23975e5 * ci ^ 8 * e ^ 2 * eta ^ 2 - 0.945e3 * ci ^ 8 * eta ^ 4 - 0.8820e4 * ci ^ 6 * e ^ 4 * eta ^ 2 - 0.14175e5 * ci ^ 6 * e ^ 2 * eta ^ 4 + 0.9625e4 * ci ^ 8 * e ^ 2 + 0.1925e4 * ci ^ 8 * eta ^ 2 + 0.18300e5 * ci ^ 6 * e ^ 4 + 0.45415e5 * ci ^ 6 * e ^ 2 * eta ^ 2 + 0.1764e4 * ci ^ 6 * eta ^ 4 + 0.4950e4 * ci ^ 4 * e ^ 4 * eta ^ 2 + 0.7677e4 * ci ^ 4 * e ^ 2 * eta ^ 4 - 0.18300e5 * ci ^ 6 * e ^ 2 - 0.3660e4 * ci ^ 6 * eta ^ 2 - 0.10550e5 * ci ^ 4 * e ^ 4 - 0.25435e5 * ci ^ 4 * e ^ 2 * eta ^ 2 - 0.990e3 * ci ^ 4 * eta ^ 4 - 0.900e3 * ci ^ 2 * e ^ 4 * eta ^ 2 - 0.1413e4 * ci ^ 2 * e ^ 2 * eta ^ 4 + 0.10550e5 * ci ^ 4 * e ^ 2 + 0.2110e4 * ci ^ 4 * eta ^ 2 + 0.1980e4 * ci ^ 2 * e ^ 4 + 0.4773e4 * ci ^ 2 * e ^ 2 * eta ^ 2 + 0.180e3 * ci ^ 2 * eta ^ 4 + 0.45e2 * e ^ 4 * eta ^ 2 + 0.63e2 * e ^ 2 * eta ^ 4 - 0.1980e4 * ci ^ 2 * e ^ 2 - 0.396e3 * ci ^ 2 * eta ^ 2 - 0.105e3 * e ^ 4 - 0.234e3 * e ^ 2 * eta ^ 2 - 0.9e1 * eta ^ 4 + 0.105e3 * e ^ 2 + 0.21e2 * eta ^ 2) * J(4) - 0.480480000e9 * (((0.12e2 / 0.5e1 * e ^ 2 - 0.1e1 / 0.5e1) * eta ^ 6 + (e ^ 4 - 0.209e3 / 0.13e2 * e ^ 2 + 0.14e2 / 0.13e2) * eta ^ 4 + (-0.70e2 / 0.13e2 * e ^ 4 + 0.574e3 / 0.25e2 * e ^ 2 - 0.357e3 / 0.325e3) * eta ^ 2 - 0.357e3 / 0.65e2 * e ^ 2 + 0.357e3 / 0.65e2 * e ^ 4) * ci ^ 10 + ((-0.1777e4 / 0.325e3 * e ^ 2 + 0.153e3 / 0.325e3) * eta ^ 6 + (-0.153e3 / 0.65e2 * e ^ 4 + 0.26617e5 / 0.715e3 * e ^ 2 - 0.1834e4 / 0.715e3) * eta ^ 4 + (0.47187e5 / 0.17875e5 + 0.1834e4 / 0.143e3 * e ^ 4 - 0.964481e6 / 0.17875e5 * e ^ 2) * eta ^ 2 - 0.47187e5 / 0.3575e4 * e ^ 4 + 0.47187e5 / 0.3575e4 * e ^ 2) * ci ^ 8 + ((-0.1358e4 / 0.3575e4 + 0.600e3 / 0.143e3 * e ^ 2) * eta ^ 6 + 0.1358e4 / 0.715e3 * (e ^ 2 - 0.7e1 / 0.97e2) * (e ^ 2 - 0.46e2 / 0.3e1) * eta ^ 4 + (-0.39102e5 / 0.17875e5 - 0.4508e4 / 0.429e3 * e ^ 4 + 0.2322964e7 / 0.53625e5 * e ^ 2) * eta ^ 2 + 0.39102e5 / 0.3575e4 * e ^ 4 - 0.39102e5 / 0.3575e4 * e ^ 2) * ci ^ 6 + ((0.266e3 / 0.2145e4 - 0.934e3 / 0.715e3 * e ^ 2) * eta ^ 6 + (-0.266e3 / 0.429e3 * e ^ 4 + 0.20078e5 / 0.2145e4 * e ^ 2 - 0.100e3 / 0.143e3) * eta ^ 4 + (0.2638e4 / 0.3575e4 - 0.50682e5 / 0.3575e4 * e ^ 2 + 0.500e3 / 0.143e3 * e ^ 4) * eta ^ 2 - 0.2638e4 / 0.715e3 * e ^ 4 + 0.2638e4 / 0.715e3 * e ^ 2) * ci ^ 4 + ((-0.1e1 / 0.65e2 + 0.68e2 / 0.429e3 * e ^ 2) * eta ^ 6 + (e ^ 4 / 0.13e2 - 0.227e3 / 0.195e3 * e ^ 2 + 0.38e2 / 0.429e3) * eta ^ 4 + (-0.339e3 / 0.3575e4 + 0.19246e5 / 0.10725e5 * e ^ 2 - 0.190e3 / 0.429e3 * e ^ 4) * eta ^ 2 + 0.339e3 / 0.715e3 * e ^ 4 - 0.339e3 / 0.715e3 * e ^ 2) * ci ^ 2 + (-0.3e1 / 0.715e3 * e ^ 2 + 0.1e1 / 0.2145e4) * eta ^ 6 + (-e ^ 4 / 0.429e3 + 0.71e2 / 0.2145e4 * e ^ 2 - 0.2e1 / 0.715e3) * eta ^ 4 + (-0.193e3 / 0.3575e4 * e ^ 2 + 0.2e1 / 0.143e3 * e ^ 4 + 0.1e1 / 0.325e3) * eta ^ 2 - e ^ 4 / 0.65e2 + e ^ 2 / 0.65e2) * R__e ^ 5 * L ^ 6 * mu ^ 5 * cos(g) * eta ^ 4 * J(6)) * J(3)) / (0.6553600e7 * eta ^ 16 * (ci ^ 2 - 0.1e1 / 0.5e1) ^ 2 * L ^ 16 * sqrt(-ci ^ 2 + 0.1e1) * e * J(2) ^ 2 + (0.81920e5 * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 2 * sqrt(-ci ^ 2 + 0.1e1) * (0.5e1 * ci ^ 2 - 0.1e1) * L ^ 12 * eta ^ 12 * e * R__e ^ 2 * J(4) + 0.35840e5 * mu ^ 4 * sqrt(-ci ^ 2 + 0.1e1) * (0.5e1 * ci ^ 2 - 0.1e1) * L ^ 8 * eta ^ 8 * e * R__e ^ 4 * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) * J(6)) * J(2) + 0.6400e4 * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * mu ^ 4 * sqrt(-ci ^ 2 + 0.1e1) * L ^ 8 * eta ^ 8 * e * R__e ^ 4 * J(4) ^ 2 + 0.5600e4 * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 6 * sqrt(-ci ^ 2 + 0.1e1) * L ^ 4 * eta ^ 4 * e * R__e ^ 6 * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) * J(6) * J(4) + 0.1225e4 * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * R__e ^ 8 * mu ^ 8 * e * sqrt(-ci ^ 2 + 0.1e1) * J(6) ^ 2);

DelLPJ3(3,1) = (-0.3276800e7 * e * R__e * L ^ 14 * mu * ci * (ci ^ 2 - 0.1e1 / 0.5e1) ^ 2 * cos(g) * eta ^ 14 * J(3) * J(2) + (0.20480e5 * L ^ 10 * cos(g) * R__e ^ 3 * ci * eta ^ 10 * e * mu ^ 3 * (0.945e3 * ci ^ 6 * eta ^ 2 - 0.1925e4 * ci ^ 6 - 0.1827e4 * ci ^ 4 * eta ^ 2 + 0.3655e4 * ci ^ 4 + 0.747e3 * ci ^ 2 * eta ^ 2 - 0.1495e4 * ci ^ 2 - 0.153e3 * eta ^ 2 + 0.309e3) * J(4) + 0.8960e4 * L ^ 6 * cos(g) * R__e ^ 5 * ci * eta ^ 6 * e * mu ^ 5 * (0.32175e5 * ci ^ 8 * eta ^ 4 - 0.173250e6 * ci ^ 8 * eta ^ 2 - 0.66000e5 * ci ^ 6 * eta ^ 4 + 0.176715e6 * ci ^ 8 + 0.357000e6 * ci ^ 6 * eta ^ 2 + 0.41670e5 * ci ^ 4 * eta ^ 4 - 0.365400e6 * ci ^ 6 - 0.227500e6 * ci ^ 4 * eta ^ 2 - 0.10200e5 * ci ^ 2 * eta ^ 4 + 0.234486e6 * ci ^ 4 + 0.56200e5 * ci ^ 2 * eta ^ 2 + 0.1075e4 * eta ^ 4 - 0.58320e5 * ci ^ 2 - 0.6050e4 * eta ^ 2 + 0.6375e4) * J(6)) * J(3)) / (0.6553600e7 * sqrt(-ci ^ 2 + 0.1e1) * (ci ^ 2 - 0.1e1 / 0.5e1) ^ 2 * L ^ 16 * eta ^ 16 * J(2) ^ 2 + (0.81920e5 * eta ^ 12 * (0.5e1 * ci ^ 2 - 0.1e1) * L ^ 12 * R__e ^ 2 * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 2 * sqrt(-ci ^ 2 + 0.1e1) * J(4) + 0.35840e5 * eta ^ 8 * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) * (0.5e1 * ci ^ 2 - 0.1e1) * L ^ 8 * R__e ^ 4 * mu ^ 4 * sqrt(-ci ^ 2 + 0.1e1) * J(6)) * J(2) + 0.6400e4 * eta ^ 8 * L ^ 8 * R__e ^ 4 * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * mu ^ 4 * sqrt(-ci ^ 2 + 0.1e1) * J(4) ^ 2 + 0.5600e4 * eta ^ 4 * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) * L ^ 4 * R__e ^ 6 * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 6 * sqrt(-ci ^ 2 + 0.1e1) * J(6) * J(4) + 0.1225e4 * R__e ^ 8 * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * sqrt(-ci ^ 2 + 0.1e1) * mu ^ 8 * J(6) ^ 2);

DelLPJ3(4,1) = 0;

DelLPJ3(5,1) = 0.1280e4 * e * sqrt((-ci ^ 2 + 1)) * R__e * (L ^ 7) * mu * ((ci ^ 2) - 0.1e1 / 0.5e1) * sin(g) * (eta ^ 7) * J(3) / (512 * L ^ 8 * (5 * ci ^ 2 - 1) * J(2) * eta ^ 8 + 80 * L ^ 4 * mu ^ 2 * J(4) * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * eta ^ 4 * R__e ^ 2 + 35 * J(6) * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * mu ^ 4 * R__e ^ 4);

DelLPJ3(6,1) = 0;

% J4
DelLPJ4(1,1) = (0.40960e5 * R__e ^ 2 * (5 * ci ^ 2 - 1) * (ci - 1) * L ^ 12 * mu ^ 2 * (ci + 1) * (7 * ci ^ 2 - 1) * sin((2 * g)) * (7 * e ^ 4 + 9 * e ^ 2 * eta ^ 2 - 7 * e ^ 2 - 2 * eta ^ 2) * (eta ^ 11) * J(4) * J(2) + 0.59270400e8 * R__e ^ 4 * (ci - 1) * L ^ 8 * mu ^ 4 * (ci + 1) * ((ci ^ 2) - 0.1e1 / 0.7e1) * ((((e ^ 2) - 0.2e1 / 0.7e1) * (eta ^ 4) + ((e ^ 4) - 0.76e2 / 0.21e2 * (e ^ 2) + 0.110e3 / 0.189e3) * (eta ^ 2) - 0.55e2 / 0.27e2 * (e ^ 4) + 0.55e2 / 0.27e2 * (e ^ 2)) * (ci ^ 4) + ((-0.2e1 / 0.3e1 * (e ^ 2) + 0.4e1 / 0.21e2) * (eta ^ 4) + (-0.2e1 / 0.3e1 * (e ^ 4) + 0.368e3 / 0.147e3 * (e ^ 2) - 0.20e2 / 0.49e2) * (eta ^ 2) + 0.10e2 / 0.7e1 * (e ^ 4) - 0.10e2 / 0.7e1 * (e ^ 2)) * (ci ^ 2) + ((e ^ 2) / 0.21e2 - 0.2e1 / 0.147e3) * (eta ^ 4) + ((e ^ 4) / 0.21e2 - 0.4e1 / 0.21e2 * (e ^ 2) + 0.2e1 / 0.63e2) * (eta ^ 2) - (e ^ 4) / 0.9e1 + (e ^ 2) / 0.9e1) * sin((2 * g)) * (eta ^ 7) * J(4) ^ 2 + 0.294294000e9 * R__e ^ 6 * (ci - 1) * L ^ 4 * mu ^ 6 * (ci + 1) * (0.5e1 / 0.7e1 * ((e ^ 2) - 0.2e1 / 0.5e1) * ((ci ^ 6) - 0.15e2 / 0.13e2 * (ci ^ 4) + 0.45e2 / 0.143e3 * (ci ^ 2) - 0.5e1 / 0.429e3) * (eta ^ 6) + ((0.20e2 / 0.13e2 + (e ^ 4) - 0.83e2 / 0.13e2 * (e ^ 2)) * (ci ^ 6) + (-0.20e2 / 0.11e2 - 0.15e2 / 0.13e2 * (e ^ 4) + 0.1075e4 / 0.143e3 * (e ^ 2)) * (ci ^ 4) + (0.20e2 / 0.39e2 + 0.45e2 / 0.143e3 * (e ^ 4) - 0.905e3 / 0.429e3 * (e ^ 2)) * (ci ^ 2) - 0.5e1 / 0.429e3 * (e ^ 4) + 0.35e2 / 0.429e3 * (e ^ 2) - 0.20e2 / 0.1001e4) * (eta ^ 4) + ((-0.102e3 / 0.65e2 - 0.70e2 / 0.13e2 * (e ^ 4) + 0.809e3 / 0.65e2 * (e ^ 2)) * (ci ^ 6) + (0.270e3 / 0.143e3 + 0.70e2 / 0.11e2 * (e ^ 4) - 0.2125e4 / 0.143e3 * (e ^ 2)) * (ci ^ 4) + (-0.6e1 / 0.11e2 + 0.1823e4 / 0.429e3 * (e ^ 2) - 0.70e2 / 0.39e2 * (e ^ 4)) * (ci ^ 2) + 0.10e2 / 0.143e3 * (e ^ 4) - 0.13e2 / 0.77e2 * (e ^ 2) + 0.2e1 / 0.91e2) * (eta ^ 2) + 0.357e3 / 0.65e2 * (e ^ 2) * (e + 1) * ((ci ^ 6) - 0.225e3 / 0.187e3 * (ci ^ 4) + 0.65e2 / 0.187e3 * (ci ^ 2) - 0.5e1 / 0.357e3) * (e - 1)) * ((ci ^ 2) - 0.1e1 / 0.7e1) * sin((2 * g)) * (eta ^ 3) * J(6) * J(4)) / (0.262144e6 * ((5 * ci ^ 2 - 1) ^ 2) * L ^ 16 * (eta ^ 16) * J(2) ^ 2 + (0.81920e5 * (eta ^ 12) * (5 * ci ^ 2 - 1) * L ^ 12 * R__e ^ 2 * mu ^ 2 * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * J(4) + 0.35840e5 * (eta ^ 8) * (5 * ci ^ 2 - 1) * L ^ 8 * R__e ^ 4 * mu ^ 4 * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * J(6)) * J(2) + 0.6400e4 * (eta ^ 8) * L ^ 8 * R__e ^ 4 * mu ^ 4 * ((189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) ^ 2) * J(4) ^ 2 + 0.5600e4 * (eta ^ 4) * L ^ 4 * R__e ^ 6 * mu ^ 6 * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * J(6) * J(4) + 0.1225e4 * R__e ^ 8 * mu ^ 8 * ((2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) ^ 2) * J(6) ^ 2);

DelLPJ4(2,1) = (-0.40960e5 * L ^ 12 * sin((2 * g)) * R__e ^ 2 * (eta ^ 10) * mu ^ 2 * (245 * ci ^ 6 * e ^ 4 + 140 * ci ^ 6 * e ^ 2 * eta ^ 2 - 245 * ci ^ 6 * e ^ 2 - 70 * ci ^ 6 * eta ^ 2 - 329 * ci ^ 4 * e ^ 4 - 254 * ci ^ 4 * e ^ 2 * eta ^ 2 + 329 * ci ^ 4 * e ^ 2 + 94 * ci ^ 4 * eta ^ 2 + 91 * ci ^ 2 * e ^ 4 + 72 * ci ^ 2 * e ^ 2 * eta ^ 2 - 91 * ci ^ 2 * e ^ 2 - 26 * ci ^ 2 * eta ^ 2 - 7 * e ^ 4 - 6 * e ^ 2 * eta ^ 2 + 7 * e ^ 2 + 2 * eta ^ 2) * J(4) * J(2) - 0.6400e4 * L ^ 8 * sin((2 * g)) * R__e ^ 4 * (eta ^ 6) * mu ^ 4 * (9261 * ci ^ 8 * e ^ 4 * eta ^ 2 + 10584 * ci ^ 8 * e ^ 2 * eta ^ 4 - 18865 * ci ^ 8 * e ^ 4 - 36211 * ci ^ 8 * e ^ 2 * eta ^ 2 - 2646 * ci ^ 8 * eta ^ 4 - 16758 * ci ^ 6 * e ^ 4 * eta ^ 2 - 20412 * ci ^ 6 * e ^ 2 * eta ^ 4 + 18865 * ci ^ 8 * e ^ 2 + 5390 * ci ^ 8 * eta ^ 2 + 34790 * ci ^ 6 * e ^ 4 + 68838 * ci ^ 6 * e ^ 2 * eta ^ 2 + 4788 * ci ^ 6 * eta ^ 4 + 8820 * ci ^ 4 * e ^ 4 * eta ^ 2 + 10584 * ci ^ 4 * e ^ 2 * eta ^ 4 - 34790 * ci ^ 6 * e ^ 2 - 9940 * ci ^ 6 * eta ^ 2 - 18844 * ci ^ 4 * e ^ 4 - 36692 * ci ^ 4 * e ^ 2 * eta ^ 2 - 2520 * ci ^ 4 * eta ^ 4 - 1386 * ci ^ 2 * e ^ 4 * eta ^ 2 - 1692 * ci ^ 2 * e ^ 2 * eta ^ 4 + 18844 * ci ^ 4 * e ^ 2 + 5384 * ci ^ 4 * eta ^ 2 + 3066 * ci ^ 2 * e ^ 4 + 5970 * ci ^ 2 * e ^ 2 * eta ^ 2 + 396 * ci ^ 2 * eta ^ 4 + 63 * e ^ 4 * eta ^ 2 + 72 * e ^ 2 * eta ^ 4 - 3066 * ci ^ 2 * e ^ 2 - 876 * ci ^ 2 * eta ^ 2 - 147 * e ^ 4 - 273 * e ^ 2 * eta ^ 2 - 18 * eta ^ 4 + 147 * e ^ 2 + 42 * eta ^ 2) * J(4) ^ 2 - 0.294294000e9 * R__e ^ 6 * L ^ 4 * mu ^ 6 * sin((2 * g)) * (eta ^ 2) * (((-0.2e1 / 0.7e1 + 0.12e2 / 0.7e1 * (e ^ 2)) * (eta ^ 6) + ((e ^ 4) - 0.153e3 / 0.13e2 * (e ^ 2) + 0.20e2 / 0.13e2) * (eta ^ 4) + (-0.102e3 / 0.65e2 - 0.70e2 / 0.13e2 * (e ^ 4) + 0.1166e4 / 0.65e2 * (e ^ 2)) * (eta ^ 2) - 0.357e3 / 0.65e2 * (e ^ 2) + 0.357e3 / 0.65e2 * (e ^ 4)) * (ci ^ 10) + ((0.418e3 / 0.637e3 - 0.358e3 / 0.91e2 * (e ^ 2)) * (eta ^ 6) + (-0.209e3 / 0.91e2 * (e ^ 4) + 0.27299e5 / 0.1001e4 * (e ^ 2) - 0.3580e4 / 0.1001e4) * (eta ^ 4) + (0.18426e5 / 0.5005e4 + 0.1790e4 / 0.143e3 * (e ^ 4) - 0.209584e6 / 0.5005e4 * (e ^ 2)) * (eta ^ 2) - 0.9213e4 / 0.715e3 * (e ^ 4) + 0.9213e4 / 0.715e3 * (e ^ 2)) * (ci ^ 8) + ((-0.508e3 / 0.1001e4 + 0.20648e5 / 0.7007e4 * (e ^ 2)) * (eta ^ 6) + (0.254e3 / 0.143e3 * (e ^ 4) - 0.62654e5 / 0.3003e4 * (e ^ 2) + 0.8440e4 / 0.3003e4) * (eta ^ 4) + (-0.1332e4 / 0.455e3 - 0.4220e4 / 0.429e3 * (e ^ 4) + 0.97940e5 / 0.3003e4 * (e ^ 2)) * (eta ^ 2) - 0.666e3 / 0.65e2 * (e ^ 2) + 0.666e3 / 0.65e2 * (e ^ 4)) * (ci ^ 6) + ((0.460e3 / 0.3003e4 - 0.460e3 / 0.539e3 * (e ^ 2)) * (eta ^ 6) + (-0.230e3 / 0.429e3 * (e ^ 4) + 0.18650e5 / 0.3003e4 * (e ^ 2) - 0.200e3 / 0.231e3) * (eta ^ 4) + (0.916e3 / 0.1001e4 + 0.100e3 / 0.33e2 * (e ^ 4) - 0.29824e5 / 0.3003e4 * (e ^ 2)) * (eta ^ 2) - 0.458e3 / 0.143e3 * (e ^ 4) + 0.458e3 / 0.143e3 * (e ^ 2)) * (ci ^ 4) + ((-0.50e2 / 0.3003e4 + 0.1940e4 / 0.21021e5 * (e ^ 2)) * (eta ^ 6) + (0.25e2 / 0.429e3 * (e ^ 4) - 0.14405e5 / 0.21021e5 * (e ^ 2) + 0.2020e4 / 0.21021e5) * (eta ^ 4) + (-0.722e3 / 0.7007e4 + 0.2122e4 / 0.1911e4 * (e ^ 2) - 0.1010e4 / 0.3003e4 * (e ^ 4)) * (eta ^ 2) + 0.361e3 / 0.1001e4 * (e ^ 4) - 0.361e3 / 0.1001e4 * (e ^ 2)) * (ci ^ 2) + (0.10e2 / 0.21021e5 - 0.50e2 / 0.21021e5 * (e ^ 2)) * (eta ^ 6) + (-0.5e1 / 0.3003e4 * (e ^ 4) + 0.395e3 / 0.21021e5 * (e ^ 2) - 0.20e2 / 0.7007e4) * (eta ^ 4) + (0.10e2 / 0.1001e4 * (e ^ 4) - 0.32e2 / 0.1001e4 * (e ^ 2) + 0.2e1 / 0.637e3) * (eta ^ 2) + (e ^ 2) / 0.91e2 - (e ^ 4) / 0.91e2) * J(6) * J(4)) / (0.262144e6 * ((5 * ci ^ 2 - 1) ^ 2) * L ^ 16 * (eta ^ 16) * J(2) ^ 2 + (0.81920e5 * (eta ^ 12) * (5 * ci ^ 2 - 1) * L ^ 12 * R__e ^ 2 * mu ^ 2 * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * J(4) + 0.35840e5 * (eta ^ 8) * (5 * ci ^ 2 - 1) * L ^ 8 * R__e ^ 4 * mu ^ 4 * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * J(6)) * J(2) + 0.6400e4 * (eta ^ 8) * L ^ 8 * R__e ^ 4 * mu ^ 4 * ((189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) ^ 2) * J(4) ^ 2 + 0.5600e4 * (eta ^ 4) * L ^ 4 * R__e ^ 6 * mu ^ 6 * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * J(6) * J(4) + 0.1225e4 * R__e ^ 8 * mu ^ 8 * ((2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) ^ 2) * J(6) ^ 2);

DelLPJ4(3,1) = (-0.81920e5 * L ^ 12 * sin((2 * g)) * R__e ^ 2 * ci * eta ^ 12 * e ^ 2 * mu ^ 2 * (35 * ci ^ 4 - 14 * ci ^ 2 + 3) * J(4) * J(2) - 0.25600e5 * e ^ 2 * R__e ^ 4 * L ^ 8 * (35 * ci ^ 4 - 14 * ci ^ 2 + 3) * mu ^ 4 * ci * sin((2 * g)) * (0.9e1 * eta ^ 2 - 0.17e2) * eta ^ 8 * J(4) ^ 2 + 0.5600e4 * L ^ 4 * sin((2 * g)) * R__e ^ 6 * ci * eta ^ 4 * e ^ 2 * mu ^ 6 * (0.15015e5 * (ci ^ 8) * eta ^ 4 - 0.80850e5 * (ci ^ 8) * eta ^ 2 - 0.34320e5 * (ci ^ 6) * eta ^ 4 + (82467 * ci ^ 8) + 0.184800e6 * (ci ^ 6) * eta ^ 2 + 0.21510e5 * (ci ^ 4) * eta ^ 4 - (188496 * ci ^ 6) - 0.116900e6 * (ci ^ 4) * eta ^ 2 - 0.4600e4 * (ci ^ 2) * eta ^ 4 + (120078 * ci ^ 4) + 0.25200e5 * (ci ^ 2) * eta ^ 2 + 0.475e3 * eta ^ 4 - (26040 * ci ^ 2) - 0.2650e4 * eta ^ 2 + 0.2775e4) * J(6) * J(4)) / (0.262144e6 * ((5 * ci ^ 2 - 1) ^ 2) * L ^ 16 * eta ^ 16 * J(2) ^ 2 + (0.81920e5 * eta ^ 12 * (5 * ci ^ 2 - 1) * L ^ 12 * R__e ^ 2 * mu ^ 2 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * J(4) + 0.35840e5 * eta ^ 8 * (5 * ci ^ 2 - 1) * L ^ 8 * R__e ^ 4 * mu ^ 4 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * J(6)) * J(2) + 0.6400e4 * eta ^ 8 * L ^ 8 * R__e ^ 4 * mu ^ 4 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * J(4) ^ 2 + 0.5600e4 * eta ^ 4 * L ^ 4 * R__e ^ 6 * mu ^ 6 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * J(6) * J(4) + 0.1225e4 * R__e ^ 8 * mu ^ 8 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * J(6) ^ 2);

DelLPJ4(4,1) = 0;

DelLPJ4(5,1) = 0.160e3 * (mu ^ 2) * (R__e ^ 2) * J(4) * e ^ 2 * (L ^ 5) * (eta ^ 5) * cos((2 * g)) * (7 * ci ^ 4 - 8 * ci ^ 2 + 1) / (512 * L ^ 8 * (5 * ci ^ 2 - 1) * J(2) * eta ^ 8 + 80 * L ^ 4 * mu ^ 2 * J(4) * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * eta ^ 4 * R__e ^ 2 + 35 * J(6) * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * mu ^ 4 * R__e ^ 4);

DelLPJ4(6,1) = 0;

% J5
DelLPJ5(1,1) = (-0.232243200e9 * sqrt((-ci ^ 2 + 1)) * ((ci ^ 2) - 0.1e1 / 0.5e1) * R__e ^ 3 * (e ^ 2 * (ci - 1) * (ci + 1) * ((-0.1e1 / 0.3e1 + 0.4e1 / 0.3e1 * e ^ 2) * eta ^ 2 + e ^ 4 - e ^ 2) * (ci - 0.1e1 / 0.3e1) * (ci + 0.1e1 / 0.3e1) * cos(g) ^ 2 + ((0.2e1 / 0.3e1 - 0.59e2 / 0.12e2 * e ^ 2 - 0.7e1 * e ^ 4) * eta ^ 2 - 0.3e1 / 0.4e1 * e ^ 4 + 0.6e1 * e ^ 2 - 0.21e2 / 0.4e1 * e ^ 6) * (ci ^ 4) + ((0.46e2 / 0.9e1 * e ^ 4 + 0.19e2 / 0.6e1 * e ^ 2 - 0.4e1 / 0.9e1) * eta ^ 2 + e ^ 4 / 0.6e1 - 0.4e1 * e ^ 2 + 0.23e2 / 0.6e1 * e ^ 6) * (ci ^ 2) + (-0.25e2 / 0.63e2 * e ^ 4 - 0.55e2 / 0.252e3 * e ^ 2 + 0.2e1 / 0.63e2) * eta ^ 2 + 0.2e1 / 0.7e1 * e ^ 2 - 0.25e2 / 0.84e2 * e ^ 6 + e ^ 4 / 0.84e2) * L ^ 10 * mu ^ 3 * cos(g) * eta ^ 9 * J(5) * J(2) - 0.1371686400e10 * sqrt((-ci ^ 2 + 1)) * R__e ^ 5 * L ^ 6 * mu ^ 5 * ((0.10e2 / 0.9e1 * (e ^ 2 - 0.3e1 / 0.10e2) * ((ci ^ 4) - 0.2e1 / 0.3e1 * (ci ^ 2) + 0.1e1 / 0.21e2) * eta ^ 4 + ((e ^ 4 - 0.301e3 / 0.81e2 * e ^ 2 + 0.55e2 / 0.81e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * e ^ 4 + 0.18e2 / 0.7e1 * e ^ 2 - 0.10e2 / 0.21e2) * (ci ^ 2) + e ^ 4 / 0.21e2 - 0.37e2 / 0.189e3 * e ^ 2 + 0.1e1 / 0.27e2) * eta ^ 2 - 0.55e2 / 0.27e2 * e ^ 2 * (e + 0.1e1) * (e - 0.1e1) * ((ci ^ 4) - 0.54e2 / 0.77e2 * (ci ^ 2) + 0.3e1 / 0.55e2)) * e ^ 2 * (ci - 1) * (ci + 1) * (ci - 0.1e1 / 0.3e1) * (ci + 0.1e1 / 0.3e1) * cos(g) ^ 2 - 0.35e2 / 0.6e1 * ((ci ^ 4) - 0.2e1 / 0.3e1 * (ci ^ 2) + 0.1e1 / 0.21e2) * ((e ^ 4 + 0.43e2 / 0.70e2 * e ^ 2 - 0.4e1 / 0.35e2) * (ci ^ 4) + (-0.46e2 / 0.63e2 * e ^ 4 - 0.41e2 / 0.105e3 * e ^ 2 + 0.8e1 / 0.105e3) * (ci ^ 2) + 0.25e2 / 0.441e3 * e ^ 4 + 0.13e2 / 0.490e3 * e ^ 2 - 0.4e1 / 0.735e3) * eta ^ 4 + ((-0.21e2 / 0.4e1 * e ^ 6 + 0.1459e4 / 0.108e3 * e ^ 4 + 0.5189e4 / 0.324e3 * e ^ 2 - 0.110e3 / 0.81e2) * (ci ^ 8) + (-0.4798e4 / 0.243e3 * e ^ 4 - 0.12176e5 / 0.567e3 * e ^ 2 + 0.22e2 / 0.3e1 * e ^ 6 + 0.3160e4 / 0.1701e4) * (ci ^ 6) + (0.29777e5 / 0.3402e4 * e ^ 4 + 0.29777e5 / 0.3402e4 * e ^ 2 - 0.391e3 / 0.126e3 * e ^ 6 - 0.188e3 / 0.243e3) * (ci ^ 4) + (-0.4504e4 / 0.3969e4 * e ^ 4 - 0.1382e4 / 0.1323e4 * e ^ 2 + 0.8e1 / 0.21e2 * e ^ 6 + 0.376e3 / 0.3969e4) * (ci ^ 2) + 0.709e3 / 0.15876e5 * e ^ 4 + 0.601e3 / 0.15876e5 * e ^ 2 - 0.25e2 / 0.1764e4 * e ^ 6 - 0.2e1 / 0.567e3) * eta ^ 2 + 0.385e3 / 0.36e2 * e ^ 2 * (e + 0.1e1) * ((ci ^ 4) - 0.54e2 / 0.77e2 * (ci ^ 2) + 0.3e1 / 0.55e2) * (e - 0.1e1) * ((e ^ 2 + 0.8e1 / 0.7e1) * (ci ^ 4) + (-0.46e2 / 0.63e2 * e ^ 2 - 0.16e2 / 0.21e2) * (ci ^ 2) + 0.25e2 / 0.441e3 * e ^ 2 + 0.8e1 / 0.147e3)) * cos(g) * eta ^ 5 * J(5) * J(4) - 0.6810804000e10 * sqrt((-ci ^ 2 + 1)) * (e ^ 2 * (ci - 1) * (ci + 1) * (ci - 0.1e1 / 0.3e1) * (ci + 0.1e1 / 0.3e1) * (0.8e1 / 0.9e1 * ((ci ^ 6) - 0.15e2 / 0.13e2 * (ci ^ 4) + 0.45e2 / 0.143e3 * (ci ^ 2) - 0.5e1 / 0.429e3) * (e ^ 2 - 0.3e1 / 0.8e1) * eta ^ 6 + ((e ^ 4 - 0.817e3 / 0.117e3 * e ^ 2 + 0.70e2 / 0.39e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * e ^ 4 + 0.10585e5 / 0.1287e4 * e ^ 2 - 0.70e2 / 0.33e2) * (ci ^ 4) + (0.45e2 / 0.143e3 * e ^ 4 - 0.8915e4 / 0.3861e4 * e ^ 2 + 0.70e2 / 0.117e3) * (ci ^ 2) - 0.5e1 / 0.429e3 * e ^ 4 + 0.115e3 / 0.1287e4 * e ^ 2 - 0.10e2 / 0.429e3) * eta ^ 4 + ((-0.70e2 / 0.13e2 * e ^ 4 + 0.826e3 / 0.65e2 * e ^ 2 - 0.119e3 / 0.65e2) * (ci ^ 6) + (0.70e2 / 0.11e2 * e ^ 4 - 0.2170e4 / 0.143e3 * e ^ 2 + 0.315e3 / 0.143e3) * (ci ^ 4) + (-0.70e2 / 0.39e2 * e ^ 4 + 0.1862e4 / 0.429e3 * e ^ 2 - 0.7e1 / 0.11e2) * (ci ^ 2) + 0.10e2 / 0.143e3 * e ^ 4 - 0.74e2 / 0.429e3 * e ^ 2 + 0.1e1 / 0.39e2) * eta ^ 2 + 0.357e3 / 0.65e2 * e ^ 2 * (e + 0.1e1) * ((ci ^ 6) - 0.225e3 / 0.187e3 * (ci ^ 4) + 0.65e2 / 0.187e3 * (ci ^ 2) - 0.5e1 / 0.357e3) * (e - 0.1e1)) * cos(g) ^ 2 - 0.14e2 / 0.3e1 * ((ci ^ 6) - 0.15e2 / 0.13e2 * (ci ^ 4) + 0.45e2 / 0.143e3 * (ci ^ 2) - 0.5e1 / 0.429e3) * ((e ^ 4 + 0.27e2 / 0.56e2 * e ^ 2 - 0.1e1 / 0.7e1) * (ci ^ 4) + (-0.46e2 / 0.63e2 * e ^ 4 - 0.25e2 / 0.84e2 * e ^ 2 + 0.2e1 / 0.21e2) * (ci ^ 2) + 0.25e2 / 0.441e3 * e ^ 4 + 0.23e2 / 0.1176e4 * e ^ 2 - 0.1e1 / 0.147e3) * eta ^ 6 + ((-0.140e3 / 0.39e2 + 0.1973e4 / 0.78e2 * e ^ 2 - 0.21e2 / 0.4e1 * e ^ 6 + 0.4783e4 / 0.156e3 * e ^ 4) * (ci ^ 10) + (-0.911561e6 / 0.15444e5 * e ^ 4 - 0.118381e6 / 0.2574e4 * e ^ 2 + 0.1543e4 / 0.156e3 * e ^ 6 + 0.8540e4 / 0.1287e4) * (ci ^ 8) + (0.53969e5 / 0.1386e4 * e ^ 4 + 0.85733e5 / 0.3003e4 * e ^ 2 - 0.600e3 / 0.143e3 - 0.38275e5 / 0.6006e4 * e ^ 6) * (ci ^ 6) + (-0.1639405e7 / 0.162162e6 * e ^ 4 - 0.17155e5 / 0.2457e4 * e ^ 2 + 0.4040e4 / 0.3861e4 + 0.3225e4 / 0.2002e4 * e ^ 6) * (ci ^ 4) + (0.26335e5 / 0.29484e5 * e ^ 4 + 0.265e3 / 0.462e3 * e ^ 2 - 0.340e3 / 0.3861e4 - 0.4985e4 / 0.36036e5 * e ^ 6) * (ci ^ 2) + 0.125e3 / 0.36036e5 * e ^ 6 - 0.2515e4 / 0.108108e6 * e ^ 4 - 0.85e2 / 0.6006e4 * e ^ 2 + 0.20e2 / 0.9009e4) * eta ^ 4 + ((0.238e3 / 0.65e2 - 0.4473e4 / 0.130e3 * e ^ 4 - 0.15421e5 / 0.260e3 * e ^ 2 + 0.735e3 / 0.26e2 * e ^ 6) * (ci ^ 10) + (-0.46375e5 / 0.858e3 * e ^ 6 + 0.294553e6 / 0.4290e4 * e ^ 4 + 0.28497e5 / 0.260e3 * e ^ 2 - 0.14686e5 / 0.2145e4) * (ci ^ 8) + (-0.20153e5 / 0.429e3 * e ^ 4 - 0.59437e5 / 0.858e3 * e ^ 2 + 0.5065e4 / 0.143e3 * e ^ 6 + 0.9404e4 / 0.2145e4) * (ci ^ 6) + (0.16271e5 / 0.1287e4 * e ^ 4 + 0.4943e4 / 0.286e3 * e ^ 2 - 0.905e3 / 0.99e2 * e ^ 6 - 0.476e3 / 0.429e3) * (ci ^ 4) + (-0.2987e4 / 0.2574e4 * e ^ 4 - 0.831e3 / 0.572e3 * e ^ 2 + 0.2065e4 / 0.2574e4 * e ^ 6 + 0.122e3 / 0.1287e4) * (ci ^ 2) + 0.565e3 / 0.18018e5 * e ^ 4 + 0.1325e4 / 0.36036e5 * e ^ 2 - 0.125e3 / 0.6006e4 * e ^ 6 - 0.2e1 / 0.819e3) * eta ^ 2 - 0.7497e4 / 0.260e3 * e ^ 2 * (e + 0.1e1) * (e - 0.1e1) * ((ci ^ 6) - 0.225e3 / 0.187e3 * (ci ^ 4) + 0.65e2 / 0.187e3 * (ci ^ 2) - 0.5e1 / 0.357e3) * ((e ^ 2 + 0.8e1 / 0.7e1) * (ci ^ 4) + (-0.46e2 / 0.63e2 * e ^ 2 - 0.16e2 / 0.21e2) * (ci ^ 2) + 0.25e2 / 0.441e3 * e ^ 2 + 0.8e1 / 0.147e3)) * R__e ^ 7 * L ^ 2 * mu ^ 7 * cos(g) * eta * J(6) * J(5)) / (0.2359296e7 * eta ^ 16 * ((5 * ci ^ 2 - 1) ^ 2) * L ^ 16 * e * J(2) ^ 2 + (0.737280e6 * mu ^ 2 * (5 * ci ^ 2 - 1) * L ^ 12 * eta ^ 12 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * e * R__e ^ 2 * J(4) + 0.322560e6 * mu ^ 4 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * (5 * ci ^ 2 - 1) * L ^ 8 * eta ^ 8 * e * R__e ^ 4 * J(6)) * J(2) + 0.57600e5 * mu ^ 4 * L ^ 8 * eta ^ 8 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * e * R__e ^ 4 * J(4) ^ 2 + 0.50400e5 * mu ^ 6 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * L ^ 4 * eta ^ 4 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * e * R__e ^ 6 * J(6) * J(4) + 0.11025e5 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * R__e ^ 8 * mu ^ 8 * e * J(6) ^ 2);

DelLPJ5(2,1) = (-0.232243200e9 * R__e ^ 3 * (e ^ 2 * (ci - 1) * (ci + 1) * (((ci ^ 6) - 0.59e2 / 0.45e2 * (ci ^ 4) + (ci ^ 2) / 0.3e1 - 0.1e1 / 0.45e2) * e ^ 4 + ((-0.1e1 + 0.4e1 / 0.9e1 * eta ^ 2) * (ci ^ 6) + (-0.121e3 / 0.135e3 * eta ^ 2 + 0.59e2 / 0.45e2) * (ci ^ 4) + (-0.1e1 / 0.3e1 + 0.94e2 / 0.405e3 * eta ^ 2) * (ci ^ 2) - 0.7e1 / 0.405e3 * eta ^ 2 + 0.1e1 / 0.45e2) * e ^ 2 - (ci ^ 6) * eta ^ 2 / 0.3e1 + 0.59e2 / 0.135e3 * (ci ^ 4) * eta ^ 2 - (ci ^ 2) * eta ^ 2 / 0.9e1 + eta ^ 2 / 0.135e3) * cos(g) ^ 2 + (0.152e3 / 0.15e2 * (ci ^ 6) - 0.1249e4 / 0.210e3 * (ci ^ 4) + 0.118e3 / 0.105e3 * (ci ^ 2) - 0.21e2 / 0.4e1 * (ci ^ 8) - 0.5e1 / 0.84e2) * e ^ 6 + ((-0.3e1 / 0.4e1 - 0.7e1 / 0.3e1 * eta ^ 2) * (ci ^ 8) + (0.16e2 / 0.15e2 + 0.1027e4 / 0.180e3 * eta ^ 2) * (ci ^ 6) + (-0.14881e5 / 0.3780e4 * eta ^ 2 - 0.71e2 / 0.210e3) * (ci ^ 4) + (0.2e1 / 0.105e3 + 0.577e3 / 0.756e3 * eta ^ 2) * (ci ^ 2) - 0.5e1 / 0.108e3 * eta ^ 2 + 0.1e1 / 0.420e3) * e ^ 4 + ((0.6e1 + 0.5e1 / 0.12e2 * eta ^ 2) * (ci ^ 8) + (-0.56e2 / 0.5e1 + 0.2e1 / 0.5e1 * eta ^ 2) * (ci ^ 6) + (-0.467e3 / 0.630e3 * eta ^ 2 + 0.44e2 / 0.7e1) * (ci ^ 4) + (-0.8e1 / 0.7e1 + 0.44e2 / 0.315e3 * eta ^ 2) * (ci ^ 2) - eta ^ 2 / 0.84e2 + 0.2e1 / 0.35e2) * e ^ 2 + 0.2e1 / 0.3e1 * (ci - 1) * (ci + 1) * ((ci ^ 4) - 0.2e1 / 0.3e1 * (ci ^ 2) + 0.1e1 / 0.21e2) * ((ci ^ 2) - 0.1e1 / 0.5e1) * eta ^ 2) * L ^ 10 * mu ^ 3 * cos(g) * eta ^ 8 * J(5) * J(2) - 0.1371686400e10 * R__e ^ 5 * L ^ 6 * mu ^ 5 * cos(g) * (e ^ 2 * (ci - 1) * (((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci + 0.1e1 / 0.3e1) * (ci - 1) * (ci + 1) * (ci - 0.1e1 / 0.3e1) * e ^ 4 + ((0.8e1 / 0.9e1 * eta ^ 4 - 0.793e3 / 0.243e3 * eta ^ 2 + 0.55e2 / 0.27e2) * (ci ^ 8) + (0.32107e5 / 0.5103e4 * eta ^ 2 - 0.145e3 / 0.81e2 * eta ^ 4 - 0.6280e4 / 0.1701e4) * (ci ^ 6) + (-0.16703e5 / 0.5103e4 * eta ^ 2 + 0.1555e4 / 0.1701e4 * eta ^ 4 + 0.3274e4 / 0.1701e4) * (ci ^ 4) + (0.2441e4 / 0.5103e4 * eta ^ 2 - 0.223e3 / 0.1701e4 * eta ^ 4 - 0.160e3 / 0.567e3) * (ci ^ 2) + 0.1e1 / 0.81e2 - 0.104e3 / 0.5103e4 * eta ^ 2 + eta ^ 4 / 0.189e3) * e ^ 2 - ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci + 0.1e1 / 0.3e1) * (ci - 1) * (ci + 1) * (ci - 0.1e1 / 0.3e1) * eta ^ 2 / 0.3e1) * (ci + 1) * cos(g) ^ 2 - 0.21e2 / 0.4e1 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci - 1) * ((ci ^ 4) - 0.46e2 / 0.63e2 * (ci ^ 2) + 0.25e2 / 0.441e3) * (ci + 1) * e ^ 6 + ((0.55e2 / 0.36e2 + 0.3607e4 / 0.324e3 * eta ^ 2 - 0.14e2 / 0.3e1 * eta ^ 4) * (ci ^ 10) + (0.1279e4 / 0.108e3 * eta ^ 4 - 0.6982e4 / 0.243e3 * eta ^ 2 - 0.6665e4 / 0.2268e4) * (ci ^ 8) + (0.9599e4 / 0.378e3 * eta ^ 2 - 0.5776e4 / 0.567e3 * eta ^ 4 + 0.1937e4 / 0.1134e4) * (ci ^ 6) + (-0.106780e6 / 0.11907e5 * eta ^ 2 + 0.3931e4 / 0.1134e4 * eta ^ 4 - 0.2371e4 / 0.7938e4) * (ci ^ 4) + (0.51313e5 / 0.47628e5 * eta ^ 2 - 0.1576e4 / 0.3969e4 * eta ^ 4 + 0.1e1 / 0.5292e4) * (ci ^ 2) - 0.488e3 / 0.11907e5 * eta ^ 2 + 0.25e2 / 0.1764e4 * eta ^ 4 + 0.1e1 / 0.756e3) * e ^ 4 + ((-0.9e1 / 0.4e1 * eta ^ 4 - 0.110e3 / 0.9e1 + 0.4309e4 / 0.324e3 * eta ^ 2) * (ci ^ 10) + (0.209e3 / 0.36e2 * eta ^ 4 - 0.73307e5 / 0.2268e4 * eta ^ 2 + 0.5470e4 / 0.189e3) * (ci ^ 8) + (0.1121e4 / 0.42e2 * eta ^ 2 - 0.1853e4 / 0.378e3 * eta ^ 4 - 0.1492e4 / 0.63e2) * (ci ^ 6) + (-0.209291e6 / 0.23814e5 * eta ^ 2 + 0.29e2 / 0.18e2 * eta ^ 4 + 0.10340e5 / 0.1323e4) * (ci ^ 4) + (0.5147e4 / 0.5292e4 * eta ^ 2 - 0.919e3 / 0.5292e4 * eta ^ 4 - 0.130e3 / 0.147e3) * (ci ^ 2) + 0.2e1 / 0.63e2 - 0.545e3 / 0.15876e5 * eta ^ 2 + 0.31e2 / 0.5292e4 * eta ^ 4) * e ^ 2 + 0.2e1 / 0.3e1 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci - 1) * (ci + 1) * ((ci ^ 4) - 0.2e1 / 0.3e1 * (ci ^ 2) + 0.1e1 / 0.21e2) * eta ^ 2) * eta ^ 4 * J(5) * J(4) - 0.6810804000e10 * (e ^ 2 * ((ci + 0.1e1 / 0.3e1) * (ci - 1) * (ci + 1) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * (ci - 0.1e1 / 0.3e1) * e ^ 4 + ((-0.1097e4 / 0.117e3 * eta ^ 4 - 0.357e3 / 0.65e2 + 0.2954e4 / 0.195e3 * eta ^ 2 + 0.4e1 / 0.3e1 * eta ^ 6) * (ci ^ 10) + (0.254645e6 / 0.11583e5 * eta ^ 4 - 0.228067e6 / 0.6435e4 * eta ^ 2 + 0.5453e4 / 0.429e3 - 0.3287e4 / 0.1053e4 * eta ^ 6) * (ci ^ 8) + (0.175168e6 / 0.6435e4 * eta ^ 2 - 0.14854e5 / 0.891e3 * eta ^ 4 - 0.21154e5 / 0.2145e4 + 0.26956e5 / 0.11583e5 * eta ^ 6) * (ci ^ 6) + (-0.30574e5 / 0.3861e4 * eta ^ 2 + 0.54970e5 / 0.11583e5 * eta ^ 4 + 0.1258e4 / 0.429e3 - 0.830e3 / 0.1287e4 * eta ^ 6) * (ci ^ 4) + (0.1030e4 / 0.1287e4 * eta ^ 2 - 0.5495e4 / 0.11583e5 * eta ^ 4 - 0.383e3 / 0.1287e4 + 0.200e3 / 0.3159e4 * eta ^ 6) * (ci ^ 2) + 0.1e1 / 0.117e3 - 0.85e2 / 0.3861e4 * eta ^ 2 + 0.145e3 / 0.11583e5 * eta ^ 4 - 0.5e1 / 0.3159e4 * eta ^ 6) * e ^ 2 - (ci + 0.1e1 / 0.3e1) * (ci - 1) * (ci + 1) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * (ci - 0.1e1 / 0.3e1) * eta ^ 2 / 0.3e1) * (ci - 1) * (ci + 1) * cos(g) ^ 2 - 0.21e2 / 0.4e1 * (ci - 1) * ((ci ^ 4) - 0.46e2 / 0.63e2 * (ci ^ 2) + 0.25e2 / 0.441e3) * (ci + 1) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * e ^ 6 + ((-0.1071e4 / 0.260e3 - 0.7e1 * eta ^ 6 + 0.6743e4 / 0.156e3 * eta ^ 4 - 0.6139e4 / 0.130e3 * eta ^ 2) * (ci ^ 12) + (0.28469e5 / 0.1404e4 * eta ^ 6 + 0.1208347e7 / 0.8580e4 * eta ^ 2 - 0.488702e6 / 0.3861e4 * eta ^ 4 + 0.1099e4 / 0.110e3) * (ci ^ 10) + (-0.23851e5 / 0.2860e4 - 0.2344625e7 / 0.108108e6 * eta ^ 6 + 0.4952033e7 / 0.36036e5 * eta ^ 4 - 0.1340957e7 / 0.8580e4 * eta ^ 2) * (ci ^ 8) + (-0.23854e5 / 0.351e3 * eta ^ 4 + 0.204089e6 / 0.2574e4 * eta ^ 2 + 0.568565e6 / 0.54054e5 * eta ^ 6 + 0.1977e4 / 0.715e3) * (ci ^ 6) + (0.77045e5 / 0.5148e4 * eta ^ 4 - 0.1780e4 / 0.99e2 * eta ^ 2 - 0.366305e6 / 0.162162e6 * eta ^ 6 - 0.493e3 / 0.1716e4) * (ci ^ 4) + (-0.11240e5 / 0.9009e4 * eta ^ 4 + 0.55687e5 / 0.36036e5 * eta ^ 2 + 0.59615e5 / 0.324324e6 * eta ^ 6 - 0.5e1 / 0.462e3) * (ci ^ 2) + 0.1e1 / 0.1092e4 + 0.3265e4 / 0.108108e6 * eta ^ 4 - 0.125e3 / 0.29484e5 * eta ^ 6 - 0.1405e4 / 0.36036e5 * eta ^ 2) * e ^ 4 + ((0.2142e4 / 0.65e2 - 0.59e2 / 0.12e2 * eta ^ 6 + 0.1031e4 / 0.26e2 * eta ^ 4 - 0.19229e5 / 0.260e3 * eta ^ 2) * (ci ^ 12) + (0.3223e4 / 0.234e3 * eta ^ 6 + 0.301273e6 / 0.1430e4 * eta ^ 2 - 0.144245e6 / 0.1287e4 * eta ^ 4 - 0.13524e5 / 0.143e3) * (ci ^ 10) + (0.1314e4 / 0.13e2 - 0.169501e6 / 0.12012e5 * eta ^ 6 + 0.191155e6 / 0.1638e4 * eta ^ 4 - 0.635849e6 / 0.2860e4 * eta ^ 2) * (ci ^ 8) + (-0.70942e5 / 0.1287e4 * eta ^ 4 + 0.229381e6 / 0.2145e4 * eta ^ 2 + 0.5335e4 / 0.819e3 * eta ^ 6 - 0.35352e5 / 0.715e3) * (ci ^ 6) + (0.9905e4 / 0.858e3 * eta ^ 4 - 0.39367e5 / 0.1716e4 * eta ^ 2 - 0.142885e6 / 0.108108e6 * eta ^ 6 + 0.1550e4 / 0.143e3) * (ci ^ 4) + (-0.24545e5 / 0.27027e5 * eta ^ 4 + 0.3667e4 / 0.2002e4 * eta ^ 2 + 0.1835e4 / 0.18018e5 * eta ^ 6 - 0.876e3 / 0.1001e4) * (ci ^ 2) + 0.2e1 / 0.91e2 + 0.125e3 / 0.6006e4 * eta ^ 4 - 0.235e3 / 0.108108e6 * eta ^ 6 - 0.227e3 / 0.5148e4 * eta ^ 2) * e ^ 2 + 0.2e1 / 0.3e1 * (ci - 1) * (ci + 1) * ((ci ^ 4) - 0.2e1 / 0.3e1 * (ci ^ 2) + 0.1e1 / 0.21e2) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * eta ^ 2) * R__e ^ 7 * L ^ 2 * mu ^ 7 * cos(g) * J(6) * J(5)) / (0.58982400e8 * eta ^ 16 * ((ci ^ 2) - 0.1e1 / 0.5e1) ^ 2 * L ^ 16 * sqrt((-ci ^ 2 + 1)) * e * J(2) ^ 2 + (0.737280e6 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 2 * sqrt((-ci ^ 2 + 1)) * (5 * ci ^ 2 - 1) * L ^ 12 * eta ^ 12 * e * R__e ^ 2 * J(4) + 0.322560e6 * mu ^ 4 * sqrt((-ci ^ 2 + 1)) * (5 * ci ^ 2 - 1) * L ^ 8 * eta ^ 8 * e * R__e ^ 4 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * J(6)) * J(2) + 0.57600e5 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * mu ^ 4 * sqrt((-ci ^ 2 + 1)) * L ^ 8 * eta ^ 8 * e * R__e ^ 4 * J(4) ^ 2 + 0.50400e5 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 6 * sqrt((-ci ^ 2 + 1)) * L ^ 4 * eta ^ 4 * e * R__e ^ 6 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * J(6) * J(4) + 0.11025e5 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * R__e ^ 8 * mu ^ 8 * e * sqrt((-ci ^ 2 + 1)) * J(6) ^ 2);

DelLPJ5(3,1) = (-0.77414400e8 * e * R__e ^ 3 * L ^ 10 * mu ^ 3 * (e ^ 2 * (ci - 1) * (-0.10e2 / 0.27e2 * (ci ^ 2) + (ci ^ 4) + 0.11e2 / 0.135e3) * (ci + 1) * cos(g) ^ 2 + (-0.6e1 - 0.21e2 / 0.4e1 * e ^ 2) * (ci ^ 6) + (0.22e2 / 0.3e1 + 0.235e3 / 0.36e2 * e ^ 2) * (ci ^ 4) + (-0.242e3 / 0.105e3 - 0.521e3 / 0.252e3 * e ^ 2) * (ci ^ 2) + 0.419e3 / 0.1260e4 * e ^ 2 + 0.38e2 / 0.105e3) * ci * cos(g) * eta ^ 10 * J(5) * J(2) - 0.152409600e9 * e * R__e ^ 5 * L ^ 6 * mu ^ 5 * (e ^ 2 * (ci - 1) * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 6) + (eta ^ 2 / 0.9e1 - 0.25e2 / 0.1701e4) * (ci ^ 4) + (-0.25e2 / 0.189e3 * eta ^ 2 + 0.325e3 / 0.1701e4) * (ci ^ 2) + eta ^ 2 / 0.27e2 - 0.11e2 / 0.189e3) * (ci + 1) * cos(g) ^ 2 - 0.21e2 / 0.4e1 * (eta ^ 2 - 0.55e2 / 0.27e2) * (e ^ 2 + 0.8e1 / 0.7e1) * (ci ^ 8) + ((0.20e2 / 0.3e1 * eta ^ 2 - 0.1190e4 / 0.81e2) * e ^ 2 + 0.8e1 * eta ^ 2 - 0.3320e4 / 0.189e3) * (ci ^ 6) + ((-0.283e3 / 0.126e3 * eta ^ 2 + 0.965e3 / 0.162e3) * e ^ 2 - 0.68e2 / 0.21e2 * eta ^ 2 + 0.220e3 / 0.27e2) * (ci ^ 4) + ((0.10e2 / 0.63e2 * eta ^ 2 - 0.3020e4 / 0.3969e4) * e ^ 2 + 0.8e1 / 0.21e2 * eta ^ 2 - 0.1672e4 / 0.1323e4) * (ci ^ 2) + (0.61e2 / 0.1764e4 + 0.31e2 / 0.1764e4 * eta ^ 2) * e ^ 2 - 0.2e1 / 0.147e3 * eta ^ 2 + 0.46e2 / 0.441e3) * ci * cos(g) * eta ^ 6 * J(5) * J(4) + 0.756756000e9 * e * (e ^ 2 * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 8) + (-0.124e3 / 0.39e2 * eta ^ 4 + 0.560e3 / 0.33e2 * eta ^ 2 - 0.12292e5 / 0.715e3) * (ci ^ 6) + (0.926e3 / 0.429e3 * eta ^ 4 - 0.14980e5 / 0.1287e4 * eta ^ 2 + 0.8498e4 / 0.715e3) * (ci ^ 4) + (-0.60e2 / 0.143e3 * eta ^ 4 + 0.800e3 / 0.351e3 * eta ^ 2 - 0.1004e4 / 0.429e3) * (ci ^ 2) + 0.5e1 / 0.117e3 * eta ^ 4 - 0.70e2 / 0.297e3 * eta ^ 2 + 0.35e2 / 0.143e3) * (ci - 1) * (ci + 1) * cos(g) ^ 2 - 0.21e2 / 0.4e1 * (e ^ 2 + 0.8e1 / 0.7e1) * (eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 10) + ((0.829e3 / 0.52e2 * e ^ 2 + 0.222e3 / 0.13e2) * eta ^ 4 + (-0.24325e5 / 0.286e3 * e ^ 2 - 0.13020e5 / 0.143e3) * eta ^ 2 + 0.65898e5 / 0.715e3 + 0.246351e6 / 0.2860e4 * e ^ 2) * (ci ^ 8) + ((-0.32609e5 / 0.2002e4 * e ^ 2 - 0.16396e5 / 0.1001e4) * eta ^ 4 + (0.37195e5 / 0.429e3 * e ^ 2 + 0.12440e5 / 0.143e3) * eta ^ 2 - 0.125343e6 / 0.1430e4 * e ^ 2 - 0.62772e5 / 0.715e3) * (ci ^ 6) + ((0.13705e5 / 0.2002e4 * e ^ 2 + 0.596e3 / 0.91e2) * eta ^ 4 + (-0.47005e5 / 0.1287e4 * e ^ 2 - 0.14920e5 / 0.429e3) * eta ^ 2 + 0.10579e5 / 0.286e3 * e ^ 2 + 0.25092e5 / 0.715e3) * (ci ^ 4) + ((-0.13075e5 / 0.12012e5 * e ^ 2 - 0.90e2 / 0.91e2) * eta ^ 4 + (0.15025e5 / 0.2574e4 * e ^ 2 + 0.2260e4 / 0.429e3) * eta ^ 2 - 0.3395e4 / 0.572e3 * e ^ 2 - 0.762e3 / 0.143e3) * (ci ^ 2) + (0.1135e4 / 0.12012e5 * e ^ 2 + 0.250e3 / 0.3003e4) * eta ^ 4 + (-0.9215e4 / 0.18018e5 * e ^ 2 - 0.1340e4 / 0.3003e4) * eta ^ 2 + 0.2097e4 / 0.4004e4 * e ^ 2 + 0.454e3 / 0.1001e4) * R__e ^ 7 * L ^ 2 * mu ^ 7 * ci * cos(g) * eta ^ 2 * J(6) * J(5)) / (0.58982400e8 * sqrt((-ci ^ 2 + 1)) * ((ci ^ 2) - 0.1e1 / 0.5e1) ^ 2 * L ^ 16 * eta ^ 16 * J(2) ^ 2 + (0.737280e6 * eta ^ 12 * (5 * ci ^ 2 - 1) * L ^ 12 * R__e ^ 2 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 2 * sqrt((-ci ^ 2 + 1)) * J(4) + 0.322560e6 * eta ^ 8 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * (5 * ci ^ 2 - 1) * L ^ 8 * R__e ^ 4 * mu ^ 4 * sqrt((-ci ^ 2 + 1)) * J(6)) * J(2) + 0.57600e5 * eta ^ 8 * L ^ 8 * R__e ^ 4 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * mu ^ 4 * sqrt((-ci ^ 2 + 1)) * J(4) ^ 2 + 0.50400e5 * eta ^ 4 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * L ^ 4 * R__e ^ 6 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * mu ^ 6 * sqrt((-ci ^ 2 + 1)) * J(6) * J(4) + 0.11025e5 * R__e ^ 8 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * sqrt((-ci ^ 2 + 1)) * mu ^ 8 * J(6) ^ 2);

DelLPJ5(4,1) = 0;

DelLPJ5(5,1) = 0.10080e5 * e * sin(g) * R__e ^ 3 * L ^ 3 * mu ^ 3 * (e ^ 2 * (ci ^ 4 - 0.10e2 / 0.9e1 * ci ^ 2 + 0.1e1 / 0.9e1) * cos(g) ^ 2 + (-0.7e1 / 0.4e1 * ci ^ 4 + 0.23e2 / 0.18e2 * ci ^ 2 - 0.25e2 / 0.252e3) * e ^ 2 - 0.2e1 * ci ^ 4 + 0.4e1 / 0.3e1 * ci ^ 2 - 0.2e1 / 0.21e2) * sqrt(-ci ^ 2 + 0.1e1) * eta ^ 3 * J(5) / (0.1536e4 * L ^ 8 * (0.5e1 * ci ^ 2 - 0.1e1) * J(2) * eta ^ 8 + 0.240e3 * L ^ 4 * mu ^ 2 * J(4) * (0.189e3 * ci ^ 4 * eta ^ 2 - 0.385e3 * ci ^ 4 - 0.126e3 * ci ^ 2 * eta ^ 2 + 0.270e3 * ci ^ 2 + 0.9e1 * eta ^ 2 - 0.21e2) * eta ^ 4 * R__e ^ 2 + 0.105e3 * J(6) * (0.2145e4 * ci ^ 6 * eta ^ 4 - 0.11550e5 * ci ^ 6 * eta ^ 2 - 0.2475e4 * ci ^ 4 * eta ^ 4 + 0.11781e5 * ci ^ 6 + 0.13650e5 * ci ^ 4 * eta ^ 2 + 0.675e3 * ci ^ 2 * eta ^ 4 - 0.14175e5 * ci ^ 4 - 0.3850e4 * ci ^ 2 * eta ^ 2 - 0.25e2 * eta ^ 4 + 0.4095e4 * ci ^ 2 + 0.150e3 * eta ^ 2 - 0.165e3) * mu ^ 4 * R__e ^ 4);

DelLPJ5(6,1) = 0;

% J6
DelLPJ6(1,1) = (0.65049600e8 * (e ^ 2 * (ci + 1) * (e ^ 4 + (-0.1e1 + 0.15e2 / 0.11e2 * eta ^ 2) * e ^ 2 - 0.4e1 / 0.11e2 * eta ^ 2) * (ci - 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * cos((2 * g)) - 0.10e2 * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * (e ^ 6 + (0.15e2 / 0.11e2 * eta ^ 2 + 0.1e1) * e ^ 4 + (0.2e1 * eta ^ 2 - 0.2e1) * e ^ 2 - 0.4e1 / 0.11e2 * eta ^ 2)) * (ci + 1) * sin((2 * g)) * (ci - 1) * R__e ^ 4 * L ^ 8 * mu ^ 4 * ((ci ^ 2) - 0.1e1 / 0.5e1) * eta ^ 8 * J(6) * J(2) + 0.384199200e9 * (ci + 1) * sin((2 * g)) * (e ^ 2 * (ci + 1) * (((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * e ^ 4 + ((0.13e2 / 0.11e2 * eta ^ 4 - 0.34e2 / 0.9e1 * eta ^ 2 + 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.26e2 / 0.33e2 * eta ^ 4 + 0.604e3 / 0.231e3 * eta ^ 2 - 0.10e2 / 0.7e1) * (ci ^ 2) + 0.13e2 / 0.231e3 * eta ^ 4 - 0.46e2 / 0.231e3 * eta ^ 2 + 0.1e1 / 0.9e1) * e ^ 2 - 0.4e1 / 0.11e2 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * eta ^ 2) * (ci - 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * cos((2 * g)) - 0.10e2 * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * (((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * e ^ 6 + ((-0.55e2 / 0.27e2 - 0.16e2 / 0.9e1 * eta ^ 2 + 0.13e2 / 0.11e2 * eta ^ 4) * (ci ^ 4) + (0.10e2 / 0.7e1 + 0.296e3 / 0.231e3 * eta ^ 2 - 0.26e2 / 0.33e2 * eta ^ 4) * (ci ^ 2) - 0.8e1 / 0.77e2 * eta ^ 2 - 0.1e1 / 0.9e1 + 0.13e2 / 0.231e3 * eta ^ 4) * e ^ 4 + ((0.110e3 / 0.27e2 - 0.164e3 / 0.27e2 * eta ^ 2 + 0.18e2 / 0.11e2 * eta ^ 4) * (ci ^ 4) + (-0.20e2 / 0.7e1 + 0.88e2 / 0.21e2 * eta ^ 2 - 0.12e2 / 0.11e2 * eta ^ 4) * (ci ^ 2) + 0.2e1 / 0.9e1 - 0.20e2 / 0.63e2 * eta ^ 2 + 0.6e1 / 0.77e2 * eta ^ 4) * e ^ 2 - 0.4e1 / 0.11e2 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * eta ^ 2)) * (ci - 1) * R__e ^ 6 * L ^ 4 * mu ^ 6 * eta ^ 4 * J(6) * J(4) + 0.1907655750e10 * mu ^ 8 * (ci + 1) * (ci - 1) * ((((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * e ^ 4 + ((0.1841e4 / 0.143e3 * eta ^ 2 + eta ^ 6 - 0.81e2 / 0.11e2 * eta ^ 4 - 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.24185e5 / 0.1573e4 * eta ^ 2 - 0.15e2 / 0.13e2 * eta ^ 6 + 0.13645e5 / 0.1573e4 * eta ^ 4 + 0.945e3 / 0.143e3) * (ci ^ 4) + (0.20755e5 / 0.4719e4 * eta ^ 2 + 0.45e2 / 0.143e3 * eta ^ 6 - 0.21e2 / 0.11e2 - 0.95e2 / 0.39e2 * eta ^ 4) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 6 - 0.25e2 / 0.143e3 * eta ^ 2 + 0.445e3 / 0.4719e4 * eta ^ 4 + 0.1e1 / 0.13e2) * e ^ 2 - 0.4e1 / 0.11e2 * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * eta ^ 2) * (ci + 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * e ^ 2 * (ci - 1) * cos((2 * g)) - 0.10e2 * (((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * e ^ 6 + ((0.301e3 / 0.143e3 * eta ^ 2 + eta ^ 6 - 0.59e2 / 0.11e2 * eta ^ 4 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.4165e4 / 0.1573e4 * eta ^ 2 - 0.15e2 / 0.13e2 * eta ^ 6 + 0.10015e5 / 0.1573e4 * eta ^ 4 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.3815e4 / 0.4719e4 * eta ^ 2 + 0.45e2 / 0.143e3 * eta ^ 6 - 0.775e3 / 0.429e3 * eta ^ 4 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 6 - 0.5e1 / 0.143e3 * eta ^ 2 + 0.335e3 / 0.4719e4 * eta ^ 4 - 0.1e1 / 0.13e2) * e ^ 4 + ((0.1414e4 / 0.65e2 * eta ^ 2 + 0.14e2 / 0.11e2 * eta ^ 6 - 0.1546e4 / 0.143e3 * eta ^ 4 - 0.714e3 / 0.65e2) * (ci ^ 6) + (-0.3710e4 / 0.143e3 * eta ^ 2 - 0.210e3 / 0.143e3 * eta ^ 6 + 0.20010e5 / 0.1573e4 * eta ^ 4 + 0.1890e4 / 0.143e3) * (ci ^ 4) + (0.3178e4 / 0.429e3 * eta ^ 2 + 0.630e3 / 0.1573e4 * eta ^ 6 - 0.42e2 / 0.11e2 - 0.510e3 / 0.143e3 * eta ^ 4) * (ci ^ 2) - 0.70e2 / 0.4719e4 * eta ^ 6 - 0.42e2 / 0.143e3 * eta ^ 2 + 0.50e2 / 0.363e3 * eta ^ 4 + 0.2e1 / 0.13e2) * e ^ 2 - 0.4e1 / 0.11e2 * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * eta ^ 2) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2)) * sin((2 * g)) * R__e ^ 8 * J(6) ^ 2) / (0.2097152e7 * L ^ 16 * ((5 * ci ^ 2 - 1) ^ 2) * eta ^ 17 * J(2) ^ 2 + (0.655360e6 * eta ^ 13 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * L ^ 12 * R__e ^ 2 * (5 * ci ^ 2 - 1) * mu ^ 2 * J(4) + 0.286720e6 * eta ^ 9 * L ^ 8 * R__e ^ 4 * (5 * ci ^ 2 - 1) * mu ^ 4 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * J(6)) * J(2) + 0.51200e5 * eta ^ 9 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * L ^ 8 * R__e ^ 4 * mu ^ 4 * J(4) ^ 2 + 0.44800e5 * eta ^ 5 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * L ^ 4 * R__e ^ 6 * mu ^ 6 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * J(6) * J(4) + 0.9800e4 * R__e ^ 8 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * eta * mu ^ 8 * J(6) ^ 2);

DelLPJ6(2,1) = (-0.65049600e8 * sin((2 * g)) * R__e ^ 4 * L ^ 8 * mu ^ 4 * eta ^ 8 * (e ^ 2 * (ci + 1) * (ci - 1) * (((ci ^ 6) - 0.71e2 / 0.55e2 * (ci ^ 4) + 0.17e2 / 0.55e2 * (ci ^ 2) - 0.1e1 / 0.55e2) * e ^ 4 + ((0.4e1 / 0.11e2 * eta ^ 2 - 0.1e1) * (ci ^ 6) + (-0.492e3 / 0.605e3 * eta ^ 2 + 0.71e2 / 0.55e2) * (ci ^ 4) + (0.24e2 / 0.121e3 * eta ^ 2 - 0.17e2 / 0.55e2) * (ci ^ 2) - 0.8e1 / 0.605e3 * eta ^ 2 + 0.1e1 / 0.55e2) * e ^ 2 - 0.4e1 / 0.11e2 * (ci + 1) * (ci - 1) * ((ci ^ 2) - 0.1e1 / 0.5e1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * eta ^ 2) * cos((2 * g)) + (0.16e2 / 0.11e2 * (ci ^ 2) - (10 * ci ^ 8) - 0.2e1 / 0.33e2 + 0.192e3 / 0.11e2 * (ci ^ 6) - 0.292e3 / 0.33e2 * (ci ^ 4)) * e ^ 6 + ((-0.40e2 / 0.11e2 * eta ^ 2 - 0.10e2) * (ci ^ 8) + (0.1064e4 / 0.121e3 * eta ^ 2 + 0.192e3 / 0.11e2) * (ci ^ 6) + (-0.292e3 / 0.33e2 - 0.1928e4 / 0.363e3 * eta ^ 2) * (ci ^ 4) + (0.16e2 / 0.11e2 + 0.328e3 / 0.363e3 * eta ^ 2) * (ci ^ 2) - 0.16e2 / 0.363e3 * eta ^ 2 - 0.2e1 / 0.33e2) * e ^ 4 + ((20 * ci ^ 8) + (0.592e3 / 0.121e3 * eta ^ 2 - 0.384e3 / 0.11e2) * (ci ^ 6) + (0.584e3 / 0.33e2 - 0.1520e4 / 0.363e3 * eta ^ 2) * (ci ^ 4) + (-0.32e2 / 0.11e2 + 0.272e3 / 0.363e3 * eta ^ 2) * (ci ^ 2) + 0.4e1 / 0.33e2 - 0.16e2 / 0.363e3 * eta ^ 2) * e ^ 2 + 0.40e2 / 0.11e2 * (ci + 1) * (ci - 1) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * ((ci ^ 2) - 0.1e1 / 0.5e1) * eta ^ 2) * J(6) * J(2) - 0.384199200e9 * sin((2 * g)) * (e ^ 2 * (ci + 1) * (ci - 1) * (((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci + 1) * (ci - 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * e ^ 4 + ((-0.77e2 / 0.27e2 * eta ^ 2 + 0.55e2 / 0.27e2 + 0.8e1 / 0.11e2 * eta ^ 4) * (ci ^ 8) + (0.11624e5 / 0.2079e4 * eta ^ 2 - 0.186e3 / 0.121e3 * eta ^ 4 - 0.230e3 / 0.63e2) * (ci ^ 6) + (0.3856e4 / 0.2079e4 + 0.1990e4 / 0.2541e4 * eta ^ 4 - 0.65686e5 / 0.22869e5 * eta ^ 2) * (ci ^ 4) + (-0.58e2 / 0.231e3 - 0.262e3 / 0.2541e4 * eta ^ 4 + 0.2944e4 / 0.7623e4 * eta ^ 2) * (ci ^ 2) + 0.1e1 / 0.99e2 - 0.13e2 / 0.847e3 * eta ^ 2 + 0.10e2 / 0.2541e4 * eta ^ 4) * e ^ 2 - 0.4e1 / 0.11e2 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci + 1) * (ci - 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * eta ^ 2) * cos((2 * g)) - 0.10e2 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci + 1) * (ci - 1) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * e ^ 6 + ((-0.80e2 / 0.11e2 * eta ^ 4 + 0.230e3 / 0.27e2 * eta ^ 2 + 0.550e3 / 0.27e2) * (ci ^ 10) + (-0.15670e5 / 0.693e3 * eta ^ 2 - 0.8650e4 / 0.189e3 + 0.2140e4 / 0.121e3 * eta ^ 4) * (ci ^ 8) + (0.1308140e7 / 0.68607e5 * eta ^ 2 - 0.35440e5 / 0.2541e4 * eta ^ 4 + 0.217780e6 / 0.6237e4) * (ci ^ 6) + (-0.65860e5 / 0.6237e4 + 0.32600e5 / 0.7623e4 * eta ^ 4 - 0.61180e5 / 0.9801e4 * eta ^ 2) * (ci ^ 4) + (0.2230e4 / 0.2079e4 - 0.3200e4 / 0.7623e4 * eta ^ 4 + 0.15010e5 / 0.22869e5 * eta ^ 2) * (ci ^ 2) - 0.170e3 / 0.7623e4 * eta ^ 2 - 0.10e2 / 0.297e3 + 0.100e3 / 0.7623e4 * eta ^ 4) * e ^ 4 + ((-0.80e2 / 0.11e2 * eta ^ 4 + 0.380e3 / 0.9e1 * eta ^ 2 - 0.1100e4 / 0.27e2) * (ci ^ 10) + (-0.18980e5 / 0.189e3 * eta ^ 2 + 0.17300e5 / 0.189e3 + 0.7000e4 / 0.363e3 * eta ^ 4) * (ci ^ 8) + (0.5412200e7 / 0.68607e5 * eta ^ 2 - 0.1920e4 / 0.121e3 * eta ^ 4 - 0.435560e6 / 0.6237e4) * (ci ^ 6) + (0.131720e6 / 0.6237e4 + 0.4240e4 / 0.847e3 * eta ^ 4 - 0.556040e6 / 0.22869e5 * eta ^ 2) * (ci ^ 4) + (-0.4460e4 / 0.2079e4 - 0.3760e4 / 0.7623e4 * eta ^ 4 + 0.18580e5 / 0.7623e4 * eta ^ 2) * (ci ^ 2) + 0.20e2 / 0.297e3 - 0.1780e4 / 0.22869e5 * eta ^ 2 + 0.40e2 / 0.2541e4 * eta ^ 4) * e ^ 2 + 0.40e2 / 0.11e2 * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 4) + (-0.2e1 / 0.3e1 * eta ^ 2 + 0.10e2 / 0.7e1) * (ci ^ 2) + eta ^ 2 / 0.21e2 - 0.1e1 / 0.9e1) * (ci + 1) * (ci - 1) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * eta ^ 2) * R__e ^ 6 * L ^ 4 * mu ^ 6 * eta ^ 4 * J(6) * J(4) - 0.1907655750e10 * mu ^ 8 * (((ci + 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * (ci - 1) * e ^ 4 + ((0.12e2 / 0.11e2 * eta ^ 6 - 0.1123e4 / 0.143e3 * eta ^ 4 + 0.9562e4 / 0.715e3 * eta ^ 2 - 0.357e3 / 0.65e2) * (ci ^ 10) + (-0.247366e6 / 0.7865e4 * eta ^ 2 - 0.4120e4 / 0.1573e4 * eta ^ 6 + 0.29431e5 / 0.1573e4 * eta ^ 4 + 0.63e2 / 0.5e1) * (ci ^ 8) + (0.6227872e7 / 0.259545e6 * eta ^ 2 + 0.3084e4 / 0.1573e4 * eta ^ 6 - 0.735994e6 / 0.51909e5 * eta ^ 4 - 0.75642e5 / 0.7865e4) * (ci ^ 6) + (-0.117080e6 / 0.17303e5 * eta ^ 2 - 0.9140e4 / 0.17303e5 * eta ^ 6 + 0.203470e6 / 0.51909e5 * eta ^ 4 + 0.334e3 / 0.121e3) * (ci ^ 4) + (0.32650e5 / 0.51909e5 * eta ^ 2 + 0.2480e4 / 0.51909e5 * eta ^ 6 - 0.405e3 / 0.1573e4 - 0.18725e5 / 0.51909e5 * eta ^ 4) * (ci ^ 2) - 0.20e2 / 0.17303e5 * eta ^ 6 - 0.2e1 / 0.121e3 * eta ^ 2 + 0.475e3 / 0.51909e5 * eta ^ 4 + 0.1e1 / 0.143e3) * e ^ 2 - 0.4e1 / 0.11e2 * (ci + 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * eta ^ 2 * (ci - 1)) * (ci + 1) * e ^ 2 * (ci - 1) * cos((2 * g)) - 0.10e2 * (ci + 1) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * (ci - 1) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * e ^ 6 + ((-0.120e3 / 0.11e2 * eta ^ 6 + 0.8370e4 / 0.143e3 * eta ^ 4 - 0.3724e4 / 0.143e3 * eta ^ 2 - 0.714e3 / 0.13e2) * (ci ^ 12) + (0.47440e5 / 0.1573e4 * eta ^ 6 + 0.119784e6 / 0.1573e4 * eta ^ 2 - 0.19780e5 / 0.121e3 * eta ^ 4 + 0.21588e5 / 0.143e3) * (ci ^ 10) + (-0.18494e5 / 0.121e3 - 0.12920e5 / 0.429e3 * eta ^ 6 + 0.2863310e7 / 0.17303e5 * eta ^ 4 - 0.1376900e7 / 0.17303e5 * eta ^ 2) * (ci ^ 8) + (-0.3898520e7 / 0.51909e5 * eta ^ 4 + 0.1927408e7 / 0.51909e5 * eta ^ 2 + 0.232480e6 / 0.17303e5 * eta ^ 6 + 0.10008e5 / 0.143e3) * (ci ^ 6) + (-0.22310e5 / 0.1573e4 - 0.1180820e7 / 0.155727e6 * eta ^ 2 + 0.2327950e7 / 0.155727e6 * eta ^ 4 - 0.135800e6 / 0.51909e5 * eta ^ 6) * (ci ^ 4) + (0.4820e4 / 0.4719e4 + 0.28400e5 / 0.155727e6 * eta ^ 6 + 0.87800e5 / 0.155727e6 * eta ^ 2 - 0.166300e6 / 0.155727e6 * eta ^ 4) * (ci ^ 2) - 0.200e3 / 0.51909e5 * eta ^ 6 - 0.10e2 / 0.429e3 + 0.3650e4 / 0.155727e6 * eta ^ 4 - 0.20e2 / 0.1573e4 * eta ^ 2) * e ^ 4 + ((-0.160e3 / 0.11e2 * eta ^ 6 + 0.16860e5 / 0.143e3 * eta ^ 4 - 0.32536e5 / 0.143e3 * eta ^ 2 + 0.1428e4 / 0.13e2) * (ci ^ 12) + (0.64000e5 / 0.1573e4 * eta ^ 6 + 0.990864e6 / 0.1573e4 * eta ^ 2 - 0.46920e5 / 0.143e3 * eta ^ 4 - 0.43176e5 / 0.143e3) * (ci ^ 10) + (0.36988e5 / 0.121e3 - 0.64160e5 / 0.1573e4 * eta ^ 6 + 0.17170540e8 / 0.51909e5 * eta ^ 4 - 0.11025224e8 / 0.17303e5 * eta ^ 2) * (ci ^ 8) + (-0.7754960e7 / 0.51909e5 * eta ^ 4 + 0.15063904e8 / 0.51909e5 * eta ^ 2 + 0.314880e6 / 0.17303e5 * eta ^ 6 - 0.20016e5 / 0.143e3) * (ci ^ 6) + (0.44620e5 / 0.1573e4 - 0.9066920e7 / 0.155727e6 * eta ^ 2 + 0.354100e6 / 0.11979e5 * eta ^ 4 - 0.183200e6 / 0.51909e5 * eta ^ 6) * (ci ^ 4) + (-0.9640e4 / 0.4719e4 + 0.12800e5 / 0.51909e5 * eta ^ 6 + 0.649520e6 / 0.155727e6 * eta ^ 2 - 0.326600e6 / 0.155727e6 * eta ^ 4) * (ci ^ 2) - 0.800e3 / 0.155727e6 * eta ^ 6 + 0.7100e4 / 0.155727e6 * eta ^ 4 - 0.40e2 / 0.429e3 * eta ^ 2 + 0.20e2 / 0.429e3) * e ^ 2 + 0.40e2 / 0.11e2 * (ci + 1) * ((eta ^ 4 - 0.70e2 / 0.13e2 * eta ^ 2 + 0.357e3 / 0.65e2) * (ci ^ 6) + (-0.15e2 / 0.13e2 * eta ^ 4 + 0.70e2 / 0.11e2 * eta ^ 2 - 0.945e3 / 0.143e3) * (ci ^ 4) + (0.45e2 / 0.143e3 * eta ^ 4 - 0.70e2 / 0.39e2 * eta ^ 2 + 0.21e2 / 0.11e2) * (ci ^ 2) - 0.5e1 / 0.429e3 * eta ^ 4 + 0.10e2 / 0.143e3 * eta ^ 2 - 0.1e1 / 0.13e2) * eta ^ 2 * (ci - 1) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2)) * sin((2 * g)) * R__e ^ 8 * J(6) ^ 2) / (0.2097152e7 * L ^ 16 * ((5 * ci ^ 2 - 1) ^ 2) * eta ^ 18 * J(2) ^ 2 + (0.655360e6 * eta ^ 14 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * L ^ 12 * R__e ^ 2 * (5 * ci ^ 2 - 1) * mu ^ 2 * J(4) + 0.286720e6 * eta ^ 10 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * L ^ 8 * R__e ^ 4 * (5 * ci ^ 2 - 1) * mu ^ 4 * J(6)) * J(2) + 0.51200e5 * eta ^ 10 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * L ^ 8 * R__e ^ 4 * mu ^ 4 * J(4) ^ 2 + 0.44800e5 * eta ^ 6 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * L ^ 4 * R__e ^ 6 * mu ^ 6 * J(6) * J(4) + 0.9800e4 * R__e ^ 8 * eta ^ 2 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * mu ^ 8 * J(6) ^ 2);

DelLPJ6(3,1) = (-0.5913600e7 * e ^ 2 * sin((2 * g)) * R__e ^ 4 * L ^ 8 * mu ^ 4 * ci * eta ^ 8 * (e ^ 2 * (ci + 1) * (ci - 1) * ((ci ^ 4) - 0.19e2 / 0.55e2 * (ci ^ 2) + 0.4e1 / 0.55e2) * cos((2 * g)) - 0.10e2 * (e ^ 2 + 0.2e1) * ((ci ^ 6) - 0.59e2 / 0.55e2 * (ci ^ 4) + 0.17e2 / 0.55e2 * (ci ^ 2) - 0.7e1 / 0.165e3)) * J(6) * J(2) - 0.17463600e8 * e ^ 2 * sin((2 * g)) * (e ^ 2 * (ci + 1) * (ci - 1) * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 6) + (-eta ^ 2 / 0.3e1 + 0.155e3 / 0.189e3) * (ci ^ 4) + (0.5e1 / 0.231e3 * eta ^ 2 - 0.193e3 / 0.2079e4) * (ci ^ 2) + eta ^ 2 / 0.231e3 + 0.1e1 / 0.693e3) * cos((2 * g)) - 0.10e2 * (e ^ 2 + 0.2e1) * ((eta ^ 2 - 0.55e2 / 0.27e2) * (ci ^ 8) + (-0.4e1 / 0.3e1 * eta ^ 2 + 0.20e2 / 0.7e1) * (ci ^ 6) + (0.46e2 / 0.77e2 * eta ^ 2 - 0.8534e4 / 0.6237e4) * (ci ^ 4) + (-0.20e2 / 0.231e3 * eta ^ 2 + 0.196e3 / 0.891e3) * (ci ^ 2) + 0.5e1 / 0.693e3 * eta ^ 2 - 0.43e2 / 0.2079e4)) * R__e ^ 6 * L ^ 4 * mu ^ 6 * ci * eta ^ 4 * J(6) * J(4) - 0.81254250e8 * mu ^ 8 * (((eta ^ 4 - 0.350e3 / 0.67e2 * eta ^ 2 + 0.1743e4 / 0.335e3) * (ci ^ 6) + (-0.57e2 / 0.67e2 * eta ^ 4 + 0.910e3 / 0.201e3 * eta ^ 2 - 0.1533e4 / 0.335e3) * (ci ^ 4) + (0.115e3 / 0.737e3 * eta ^ 4 - 0.1850e4 / 0.2211e4 * eta ^ 2 + 0.57e2 / 0.67e2) * (ci ^ 2) - 0.35e2 / 0.2211e4 * eta ^ 4 + 0.190e3 / 0.2211e4 * eta ^ 2 - 0.65e2 / 0.737e3) * (ci + 1) * e ^ 2 * (ci - 1) * cos((2 * g)) - 0.280e3 / 0.67e2 * (e ^ 2 + 0.2e1) * ((ci ^ 8) - 0.4e1 / 0.3e1 * (ci ^ 6) + 0.46e2 / 0.77e2 * (ci ^ 4) - 0.20e2 / 0.231e3 * (ci ^ 2) + 0.5e1 / 0.693e3) * (eta ^ 4 - 0.5e1 * eta ^ 2 + 0.24e2 / 0.5e1)) * e ^ 2 * ci * sin((2 * g)) * R__e ^ 8 * J(6) ^ 2) / (0.524288e6 * ((5 * ci ^ 2 - 1) ^ 2) * L ^ 16 * eta ^ 16 * J(2) ^ 2 + (0.163840e6 * eta ^ 12 * (5 * ci ^ 2 - 1) * L ^ 12 * R__e ^ 2 * mu ^ 2 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * J(4) + 0.71680e5 * eta ^ 8 * (5 * ci ^ 2 - 1) * L ^ 8 * R__e ^ 4 * mu ^ 4 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * J(6)) * J(2) + 0.12800e5 * eta ^ 8 * L ^ 8 * R__e ^ 4 * mu ^ 4 * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) ^ 2 * J(4) ^ 2 + 0.11200e5 * eta ^ 4 * L ^ 4 * R__e ^ 6 * mu ^ 6 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) * (0.189e3 * (ci ^ 4) * eta ^ 2 - (385 * ci ^ 4) - 0.126e3 * (ci ^ 2) * eta ^ 2 + (270 * ci ^ 2) + 0.9e1 * eta ^ 2 - 0.21e2) * J(6) * J(4) + 0.2450e4 * R__e ^ 8 * mu ^ 8 * (0.2145e4 * (ci ^ 6) * eta ^ 4 - 0.11550e5 * (ci ^ 6) * eta ^ 2 - 0.2475e4 * (ci ^ 4) * eta ^ 4 + (11781 * ci ^ 6) + 0.13650e5 * (ci ^ 4) * eta ^ 2 + 0.675e3 * (ci ^ 2) * eta ^ 4 - (14175 * ci ^ 4) - 0.3850e4 * (ci ^ 2) * eta ^ 2 - 0.25e2 * eta ^ 4 + (4095 * ci ^ 2) + 0.150e3 * eta ^ 2 - 0.165e3) ^ 2 * J(6) ^ 2);

DelLPJ6(4,1) = 0;

DelLPJ6(5,1) = 0.2310e4 * e ^ 2 * (ci + 1) * (ci - 1) * (R__e ^ 4) * L * (e ^ 2 * (ci + 1) * (ci - 1) * ((ci ^ 2) - 0.1e1 / 0.11e2) * cos((2 * g)) ^ 2 - 0.5e1 * (e ^ 2 + 0.2e1) * ((ci ^ 4) - 0.6e1 / 0.11e2 * (ci ^ 2) + 0.1e1 / 0.33e2) * cos((2 * g)) + e ^ 2 * (-(ci ^ 4) / 0.2e1 + 0.6e1 / 0.11e2 * (ci ^ 2) - 0.1e1 / 0.22e2)) * (mu ^ 4) * eta * J(6) / (1024 * L ^ 8 * (5 * ci ^ 2 - 1) * J(2) * eta ^ 8 + 160 * L ^ 4 * mu ^ 2 * J(4) * (189 * ci ^ 4 * eta ^ 2 - 385 * ci ^ 4 - 126 * ci ^ 2 * eta ^ 2 + 270 * ci ^ 2 + 9 * eta ^ 2 - 21) * eta ^ 4 * R__e ^ 2 + 70 * J(6) * (2145 * ci ^ 6 * eta ^ 4 - 11550 * ci ^ 6 * eta ^ 2 - 2475 * ci ^ 4 * eta ^ 4 + 11781 * ci ^ 6 + 13650 * ci ^ 4 * eta ^ 2 + 675 * ci ^ 2 * eta ^ 4 - 14175 * ci ^ 4 - 3850 * ci ^ 2 * eta ^ 2 - 25 * eta ^ 4 + 4095 * ci ^ 2 + 150 * eta ^ 2 - 165) * mu ^ 4 * R__e ^ 4);

DelLPJ6(6,1) = 0;


% 2nd order
llp2 = -0.1e1 / (G ^ 5) / (L ^ 3) * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * sin((2 * g)) / 0.4e1 - 0.1e1 / (G ^ 5) / L * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * sin((2 * g)) / 0.4e1;

glp2 = -0.5e1 / 0.8e1 / (G ^ 6) / (L ^ 2) * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * sin((2 * g)) - 0.1e1 / (G ^ 4) / (L ^ 2) * mu ^ 2 / ((G ^ 2 - 5 * H ^ 2) ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * sin((2 * g)) / 0.4e1 + 0.1e1 / (G ^ 4) / (L ^ 2) * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * sin((2 * g)) / 0.4e1 + 0.1e1 / (G ^ 5) / (L ^ 2) * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (8 * G ^ 3 - 34 * G * H ^ 2) * sin((2 * g)) / 0.8e1;

hlp2 = 0.5e1 / 0.4e1 / (G ^ 5) / (L ^ 2) * mu ^ 2 / ((G ^ 2 - 5 * H ^ 2) ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * sin((2 * g)) * H + 0.1e1 / (G ^ 5) / (L ^ 2) * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (-34 * G ^ 2 * H + 60 * H ^ 3) * sin((2 * g)) / 0.8e1;

% Llp2 = 0;

Glp2 = -0.1e1 / (G ^ 5) / (L ^ 2) * mu ^ 2 / (G ^ 2 - 5 * H ^ 2) / J(2) ^ 2 * R__e ^ 2 * (G ^ 2 - L ^ 2) * J(3) ^ 2 * (2 * G ^ 4 - 17 * G ^ 2 * H ^ 2 + 15 * H ^ 4) * cos((2 * g)) / 0.4e1;

% Hlp2 = 0;

DelLP = DelLPJ3 + DelLPJ4 + DelLPJ5 + DelLPJ6 + 1/2*[llp2; glp2; hlp2; 0; Glp2; 0]*0;

end
